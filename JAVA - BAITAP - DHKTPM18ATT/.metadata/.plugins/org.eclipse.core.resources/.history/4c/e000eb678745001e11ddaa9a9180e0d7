/*
 * @ (#)  BankTester.java   2023-06    Aug 28, 2023
 *
 * Copyright (c) 2023  IUH. All rights reserved.
 * Ho Chi Minh City
 */

package bank.management;

import java.util.Scanner;

/*
 * @description:
 * @author:  	 Hoang Nghiem Ly
 * @work at:	 IUH
 * @date:    	 Aug 28, 2023
 * @time:		 4:16:02â€¯PM
 * @verison: 	 2023-06
 * @location:    Ho Chi Minh City
 */

public class BankTester {
	public static void main(String[] args) {
		Bank bank = new Bank("IUH Bank", 10);
		Scanner sc = new Scanner(System.in);
		int choice = 0;
		do {

			System.out.println("Welcome to " + bank.getName());
			System.out.println("1. Open new account");
			System.out.println("2. Deposit");
			System.out.println("3. Withdraw");
			System.out.println("4. Transfer");
			System.out.println("5. The total balance of all bank accounts in the bank");
			System.out.println("6. Print all bank accounts");
			System.out.println("7. Exit");
			System.out.print("Enter your choice: ");

			choice = sc.nextInt();
			sc.nextLine();

			switch (choice) {
			case 1:
				System.out.println("Enter account number: ");
				String accountNumber = sc.nextLine();
				System.out.println("Enter account owner name: ");
				String ownerName = sc.nextLine();
				System.out.println("Enter initial balance: ");
				double balance = sc.nextDouble();
				sc.nextLine();
				try {
					bank.addNew(accountNumber, ownerName, balance);
					System.out.println("Account opened successfully!");
				} catch (IllegalArgumentException e) {
					System.out.println(e.getMessage());
				}
				break;
			case 2:
				System.out.println("Enter account number: ");
				accountNumber = sc.nextLine();
				System.out.println("Enter deposit amount: ");
				double depositAmount = sc.nextDouble();
				sc.nextLine();
				BankAccount depositAccount = bank.find(accountNumber);
				if (depositAccount != null) {
					depositAccount.deposit(depositAmount);
					System.out.println("Deposit successful!");
				} else {
					System.out.println("Account not found.");
				}
				break;
			case 3:
				System.out.println("Enter account number: ");
				accountNumber = sc.nextLine();
				System.out.println("Enter withdrawal amount: ");
				double withdrawalAmount = sc.nextDouble();
				sc.nextLine();
				BankAccount withdrawalAccount = bank.find(accountNumber);
				if (withdrawalAccount != null) {
					try {
						withdrawalAccount.withdraw(withdrawalAmount);
						System.out.println("Withdrawal successful!");
					} catch (IllegalArgumentException e) {
						System.out.println(e.getMessage());
					}
				} else {
					System.out.println("Account not found.");
				}
				break;
			case 4:
				System.out.println("Enter source account number: ");
				String sourceAccountNumber = sc.nextLine();
				System.out.println("Enter destination account number: ");
				String destinationAccountNumber = sc.nextLine();
				System.out.println("Enter transfer amount: ");
				double transferAmount = sc.nextDouble();
				sc.nextLine();
				BankAccount sourceAccount = bank.find(sourceAccountNumber);
				BankAccount destinationAccount = bank.find(destinationAccountNumber);
				if (sourceAccount != null && destinationAccount != null) {
					try {
						sourceAccount.transfer(destinationAccount, transferAmount);
						System.out.println("Transfer successful!");
					} catch (IllegalArgumentException e) {
						System.out.println(e.getMessage());
					}
				} else {
					System.out.println("One or both accounts not found.");
				}
				break;
			case 5:
				double totalBalance = bank.getTotalBalance();
				System.out.println("Total balance of all accounts: " + totalBalance);
				break;
			case 6:
				BankAccount[] accounts = bank.getAccounts();
				for (BankAccount account : accounts) {
					System.out.println(account);
					System.out.println("---------------");
				}
				break;
			case 7:
				System.out.println("Goodbye!");
				break;
			default:
				System.out.println("Invalid choice. Please enter a valid option");
			}

		} while (choice != 7);
		sc.close();
	}
}
